name: Frontend CI
on:
  workflow_dispatch:
  pull_request:
      branches:
      - main
env:
  NODE_VERSION: '20.x'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run lint
        run: cd starter/frontend && npm run lint -- --fix



  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: cd ./starter/frontend && npm install

      - name: Run test
        run: cd ./starter/frontend && npm run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Build and Run Docker Image
        run: |
          cd starter/frontend
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
          docker run --name mp-frontend -p 3000:3000 -d mp-frontend