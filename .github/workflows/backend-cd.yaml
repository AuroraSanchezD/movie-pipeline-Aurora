name: Backend CD
on:
  workflow_dispatch:
  push:
    branches:
      - master 

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pip install flake8
      
      - name: Run lint
        run: cd starter/backend && pipenv run lint
        

  test:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pip install flake8
      
      - name: Run tests
        run: cd starter/backend && pipenv run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps: 
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{ secrets.AWS_REGION}}
        
    - name: Logging into ECR
      uses: aws-actions/amazon-ecr-login@v2
  
    - name: Build and Push Docker Image
      working-directory: starter/backend
      env:
        IMAGE_TAG: latest
        REPO_NAME: backend
        ECR_REPO_URL: 505370451601.dkr.ecr.us-east-1.amazonaws.com
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag $ECR_REPO_URL/$REPO_NAME:$IMAGE_TAG .
        docker push $ECR_REPO_URL/$REPO_NAME:$IMAGE_TAG